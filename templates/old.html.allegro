<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Pianissimo PHP framework">
    <meta name="author" content="@jonmldr">
    <meta name="generator" content="Pianissimo Framework">

    <title>Pianissimo framework</title>

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Nunito" rel="stylesheet">
    <style>
        body {
            font-family: 'Nunito', sans-serif;
        }

        a {
            color: #22a6b3;
        }

        a:hover {
            color: #7ed6df;
            text-decoration: none;
        }

        table ul {
            margin-bottom: 0;
            padding-inline-start: 20px;
        }
    </style>
</head>
<body>
<main role="main">
    <div class="container">
        <img src="https://jonmulder.nl/pianissimo-logo1.1.svg" width="400px" class="mt-5 mb-4"/>

        <p class="lead">Welcome by the Pianissimo PHP framework!</p>
        <p>Maybe you want to take a look at</p>
        <ul>
            <li><a href="/allegro">Allegro template rendering engine</a></li>
            <li><a href="/annotation">Pianissimo annotation reader</a></li>
            <li>PianoTuner debugging toolbar <span class="text-muted">(see below)</span></li>
            <br/>
            <li><a href="/json">JsonResponse</a></li>
            <li><a href="/redirect">RedirectResponse</a></li>
        </ul>

        <h3 class="mt-5">Component dependencies</h3>

        <table class="table table-striped">
            <thead>
            <tr>
                <th>Component</th>
                <th>Default dependencies</th>
                <th>Interface dependencies</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Allegro</td>
                <td>
                    <ul>
                        <li>Finder</li>
                    </ul>
                </td>
                <td>N/A</td>
            </tr>
            <tr>
                <td>Annotation</td>
                <td>
                    <ul>
                        <li>Container <span class="text-muted">&rsaquo; an container witch implements ContainerInterface</span></li>
                    </ul>
                </td>
                <td>N/A</td>
            </tr>
            <tr>
                <td>Container</td>
                <td>
                    <ul>
                        <li>Finder</li>
                        <li>symfony/yaml</li>
                    </ul>
                </td>
                <td>
                    ContainerInterface
                    <ul>
                        <li>a registry (should implement RegistryInterface)</li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td>Core</td>
                <td>
                    <ul>
                        <li>Container <span class="text-muted">&rsaquo; an container witch implements ContainerInterface</span></li>
                        <li>HttpCore: HttpFoundation</li>
                    </ul>
                </td>
                <td>
                    <ul>
                        <li>Core with CoreInterface: -</li>
                        <li>Core with HttpCoreInterface: HttpFoundation</li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td>Finder</td>
                <td>-</td>
                <td>?</td>
            </tr>
            <tr>
                <td>HttpFoundation</td>
                <td>
                    <ul>
                        <li>Container <span class="text-muted">&rsaquo; an container witch implements ContainerInterface</span></li>
                        <li>Routing <span class="text-muted">&check;</span></li>
                    </ul>
                </td>
                <td>?</td>
            </tr>
            <tr>
                <td>Routing</td>
                <td>
                    <ul>
                        <li>Container <span class="text-muted">&rsaquo; an container witch implements ContainerInterface</span></li>
                        <li>HttpFoundation <span class="text-muted">&check;</span></li>
                        <li>Finder</li>
                        <li>symfony/yaml</li>
                    </ul>
                </td>
                <td>?</td>
            </tr>
            </tbody>
        </table>

        First things first:
        <ul>
            <li><del>Container optional dependency of Routing</del></li>
            <li><del>Routing optional dependency of Annotation</del></li>
            <li><del>Core component</del></li>
            <li>PianoTuner separate component</li>
            <li class="text-muted">Routing: routes.yaml as alternative for annotations (including data validation)</li>
            <li class="text-muted">Building more interfaces to inject them, instead of services.
                Ensures that the developer can choose for an alternative for an component.
            </li>
        </ul>
    </div>
</main>
<footer class="mt-5 pb-5">
    <div class="container text-muted">
        Made with all the &hearts; in the world by <a href="https://github.com/jonmldr">@jonmldr</a>
    </div>
</footer>
</body>
</html>